/*
bursa

Programmable Cardano Wallet API

API version: v0
Contact: support@blinklabs.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ApiWalletDeleteRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiWalletDeleteRequest{}

// ApiWalletDeleteRequest struct for ApiWalletDeleteRequest
type ApiWalletDeleteRequest struct {
	Name     string  `json:"name"`
	Password *string `json:"password,omitempty"`
}

type _ApiWalletDeleteRequest ApiWalletDeleteRequest

// NewApiWalletDeleteRequest instantiates a new ApiWalletDeleteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiWalletDeleteRequest(name string) *ApiWalletDeleteRequest {
	this := ApiWalletDeleteRequest{}
	this.Name = name
	return &this
}

// NewApiWalletDeleteRequestWithDefaults instantiates a new ApiWalletDeleteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiWalletDeleteRequestWithDefaults() *ApiWalletDeleteRequest {
	this := ApiWalletDeleteRequest{}
	return &this
}

// GetName returns the Name field value
func (o *ApiWalletDeleteRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ApiWalletDeleteRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ApiWalletDeleteRequest) SetName(v string) {
	o.Name = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ApiWalletDeleteRequest) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiWalletDeleteRequest) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ApiWalletDeleteRequest) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ApiWalletDeleteRequest) SetPassword(v string) {
	o.Password = &v
}

func (o ApiWalletDeleteRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiWalletDeleteRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	return toSerialize, nil
}

func (o *ApiWalletDeleteRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf(
				"no value given for required property %v",
				requiredProperty,
			)
		}
	}

	varApiWalletDeleteRequest := _ApiWalletDeleteRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiWalletDeleteRequest)

	if err != nil {
		return err
	}

	*o = ApiWalletDeleteRequest(varApiWalletDeleteRequest)

	return err
}

type NullableApiWalletDeleteRequest struct {
	value *ApiWalletDeleteRequest
	isSet bool
}

func (v NullableApiWalletDeleteRequest) Get() *ApiWalletDeleteRequest {
	return v.value
}

func (v *NullableApiWalletDeleteRequest) Set(val *ApiWalletDeleteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiWalletDeleteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiWalletDeleteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiWalletDeleteRequest(
	val *ApiWalletDeleteRequest,
) *NullableApiWalletDeleteRequest {
	return &NullableApiWalletDeleteRequest{value: val, isSet: true}
}

func (v NullableApiWalletDeleteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiWalletDeleteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
bursa

Programmable Cardano Wallet API

API version: v0
Contact: support@blinklabs.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ApiWalletRestoreRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiWalletRestoreRequest{}

// ApiWalletRestoreRequest struct for ApiWalletRestoreRequest
type ApiWalletRestoreRequest struct {
	AccountId *int32  `json:"account_id,omitempty"`
	AddressId *int32  `json:"address_id,omitempty"`
	Mnemonic  string  `json:"mnemonic"`
	Password  *string `json:"password,omitempty"`
	PaymentId *int32  `json:"payment_id,omitempty"`
	StakeId   *int32  `json:"stake_id,omitempty"`
}

type _ApiWalletRestoreRequest ApiWalletRestoreRequest

// NewApiWalletRestoreRequest instantiates a new ApiWalletRestoreRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiWalletRestoreRequest(mnemonic string) *ApiWalletRestoreRequest {
	this := ApiWalletRestoreRequest{}
	this.Mnemonic = mnemonic
	return &this
}

// NewApiWalletRestoreRequestWithDefaults instantiates a new ApiWalletRestoreRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiWalletRestoreRequestWithDefaults() *ApiWalletRestoreRequest {
	this := ApiWalletRestoreRequest{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *ApiWalletRestoreRequest) GetAccountId() int32 {
	if o == nil || IsNil(o.AccountId) {
		var ret int32
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiWalletRestoreRequest) GetAccountIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *ApiWalletRestoreRequest) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given int32 and assigns it to the AccountId field.
func (o *ApiWalletRestoreRequest) SetAccountId(v int32) {
	o.AccountId = &v
}

// GetAddressId returns the AddressId field value if set, zero value otherwise.
func (o *ApiWalletRestoreRequest) GetAddressId() int32 {
	if o == nil || IsNil(o.AddressId) {
		var ret int32
		return ret
	}
	return *o.AddressId
}

// GetAddressIdOk returns a tuple with the AddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiWalletRestoreRequest) GetAddressIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AddressId) {
		return nil, false
	}
	return o.AddressId, true
}

// HasAddressId returns a boolean if a field has been set.
func (o *ApiWalletRestoreRequest) HasAddressId() bool {
	if o != nil && !IsNil(o.AddressId) {
		return true
	}

	return false
}

// SetAddressId gets a reference to the given int32 and assigns it to the AddressId field.
func (o *ApiWalletRestoreRequest) SetAddressId(v int32) {
	o.AddressId = &v
}

// GetMnemonic returns the Mnemonic field value
func (o *ApiWalletRestoreRequest) GetMnemonic() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mnemonic
}

// GetMnemonicOk returns a tuple with the Mnemonic field value
// and a boolean to check if the value has been set.
func (o *ApiWalletRestoreRequest) GetMnemonicOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mnemonic, true
}

// SetMnemonic sets field value
func (o *ApiWalletRestoreRequest) SetMnemonic(v string) {
	o.Mnemonic = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ApiWalletRestoreRequest) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiWalletRestoreRequest) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ApiWalletRestoreRequest) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ApiWalletRestoreRequest) SetPassword(v string) {
	o.Password = &v
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise.
func (o *ApiWalletRestoreRequest) GetPaymentId() int32 {
	if o == nil || IsNil(o.PaymentId) {
		var ret int32
		return ret
	}
	return *o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiWalletRestoreRequest) GetPaymentIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PaymentId) {
		return nil, false
	}
	return o.PaymentId, true
}

// HasPaymentId returns a boolean if a field has been set.
func (o *ApiWalletRestoreRequest) HasPaymentId() bool {
	if o != nil && !IsNil(o.PaymentId) {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given int32 and assigns it to the PaymentId field.
func (o *ApiWalletRestoreRequest) SetPaymentId(v int32) {
	o.PaymentId = &v
}

// GetStakeId returns the StakeId field value if set, zero value otherwise.
func (o *ApiWalletRestoreRequest) GetStakeId() int32 {
	if o == nil || IsNil(o.StakeId) {
		var ret int32
		return ret
	}
	return *o.StakeId
}

// GetStakeIdOk returns a tuple with the StakeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiWalletRestoreRequest) GetStakeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.StakeId) {
		return nil, false
	}
	return o.StakeId, true
}

// HasStakeId returns a boolean if a field has been set.
func (o *ApiWalletRestoreRequest) HasStakeId() bool {
	if o != nil && !IsNil(o.StakeId) {
		return true
	}

	return false
}

// SetStakeId gets a reference to the given int32 and assigns it to the StakeId field.
func (o *ApiWalletRestoreRequest) SetStakeId(v int32) {
	o.StakeId = &v
}

func (o ApiWalletRestoreRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiWalletRestoreRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.AddressId) {
		toSerialize["address_id"] = o.AddressId
	}
	toSerialize["mnemonic"] = o.Mnemonic
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.PaymentId) {
		toSerialize["payment_id"] = o.PaymentId
	}
	if !IsNil(o.StakeId) {
		toSerialize["stake_id"] = o.StakeId
	}
	return toSerialize, nil
}

func (o *ApiWalletRestoreRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"mnemonic",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf(
				"no value given for required property %v",
				requiredProperty,
			)
		}
	}

	varApiWalletRestoreRequest := _ApiWalletRestoreRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiWalletRestoreRequest)

	if err != nil {
		return err
	}

	*o = ApiWalletRestoreRequest(varApiWalletRestoreRequest)

	return err
}

type NullableApiWalletRestoreRequest struct {
	value *ApiWalletRestoreRequest
	isSet bool
}

func (v NullableApiWalletRestoreRequest) Get() *ApiWalletRestoreRequest {
	return v.value
}

func (v *NullableApiWalletRestoreRequest) Set(val *ApiWalletRestoreRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiWalletRestoreRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiWalletRestoreRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiWalletRestoreRequest(
	val *ApiWalletRestoreRequest,
) *NullableApiWalletRestoreRequest {
	return &NullableApiWalletRestoreRequest{value: val, isSet: true}
}

func (v NullableApiWalletRestoreRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiWalletRestoreRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
